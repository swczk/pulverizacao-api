services:
  # API GraphQL - Produção
  api:
    image: pulverizacao-api:latest
    container_name: pulverizacao-api-prod
    ports:
      - "80:8080"
    environment:
      # Use MongoDB Atlas em produção
      - MONGO_URI=${MONGO_URI}
      - DATABASE_NAME=${DATABASE_NAME:-pulverizacao}
      - PORT=8080
    networks:
      - pulverizacao-network
    restart: always
    healthcheck:
      test: [ "CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/graphql" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    container_name: pulverizacao-nginx
    ports:
      - "443:443"
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - pulverizacao-network
    restart: always

  # Monitoring com Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: pulverizacao-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - pulverizacao-network
    restart: always

  # Grafana Dashboard (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: pulverizacao-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - pulverizacao-network
    restart: always

networks:
  pulverizacao-network:
    driver: bridge

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
